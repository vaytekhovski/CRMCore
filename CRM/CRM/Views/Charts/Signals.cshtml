@{
    ViewBag.Title = "Signals";

}

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script type="text/javascript">

        CHART = document.getElementById('Chart');

        var boostDates = [];
        var logregDates = [];

        var boostValues = [];
        var logregValues = [];

        var boostEMA = [];
        var logregEMA = [];

        var BBL = [];
        var BBM = [];
        var BBU = [];


        @foreach (var item in Model.boostDates)
        {
            <text>
        boostDates.push("@item.Year"+ "-" + "@item.Month" + "-" + "@item.Day" + " "+ "@item.Hour" + ":" + "@item.Minute");
            </text>
        }

        @foreach (var item in Model.boostValues)
        {
            <text>
        boostValues.push(parseFloat(@item));
            </text>

            }

        @foreach (var item in Model.logregDates)
        {
            <text>
        logregDates.push("@item.Year"+ "-" + "@item.Month" + "-" + "@item.Day" + " "+ "@item.Hour" + ":" + "@item.Minute");
            </text>
        }

        @foreach (var item in Model.logregValues)
        {
            <text>
        logregValues.push(parseFloat(@item));
            </text>

            } 

        @foreach (var item in Model.logregEMA)
        {
            <text>
        logregEMA.push(parseFloat(@item));
            </text>

            } 

        @foreach (var item in Model.boostEMA)
        {
            <text>
        boostEMA.push(parseFloat(@item));
            </text>

        }

        @foreach(var item in Model.BBL)
        {
            <text>
        BBL.push(parseFloat(@item));
        </text>
        }
        
        @foreach(var item in Model.BBM)
        {
            <text>
        BBM.push(parseFloat(@item));
        </text>
        }
        
        @foreach(var item in Model.BBU)
        {
            <text>
        BBU.push(parseFloat(@item));
        </text>
        }

        ctx = document.getElementById('myChart').getContext('2d');

        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: boostDates,
                datasets: [{
                    label: 'boost Proba',
                    borderColor: 'rgba(23, 227, 101, 0.8)',
                    backgroundColor: 'rgba(23, 227, 101, 0.5)',
                    fill: false,
                    type: 'scatter',
                    data: boostValues,
                    pointRadius:0
                }, {
                    label: 'logreg Proba',
                    borderColor: 'rgba(219, 22, 22, 0.8)',
                    backgroundColor: 'rgba(219, 22, 22, 0.5)',
                        fill: false,
                        type: 'scatter',
                    data: logregValues,
                    pointRadius: 0
                },{
                    label: 'boost EMA',
                        borderColor: 'rgba(33, 79, 219, 0.8)',
                        backgroundColor: 'rgba(33, 79, 219, 0.5)',
                        fill: false,
                        type: 'scatter',
                        data: boostEMA,
                    pointRadius: 0
                },{
                    label: 'logreg EMA',
                        borderColor: 'rgba(33, 219, 160, 0.8)',
                        backgroundColor: 'rgba(33, 219, 160, 0.5)',
                        fill: false,
                        type: 'scatter',
                        data: logregEMA,
                    pointRadius: 0
                },{
                    label: 'BBL',
                        borderColor: 'rgba(199, 222, 27, 0.8)',
                        backgroundColor: 'rgba(199, 222, 27, 0.5)',
                        fill: false,
                        type: 'scatter',
                        data: BBL,
                    pointRadius: 0
                },{
                    label: 'BBM',
                        borderColor: 'rgba(28, 214, 217, 0.8)',
                        backgroundColor: 'rgba(28, 214, 217, 0.5)',
                        fill: false,
                        type: 'scatter',
                        data: BBM,
                    pointRadius: 0
                },{
                    label: 'BBU',
                        borderColor: 'rgba(161, 26, 214, 0.8)',
                        backgroundColor: 'rgba(161, 26, 214, 0.5)',
                        fill: false,
                        type: 'scatter',
                        data: BBU,
                    pointRadius: 0
                }]
            },
            options: {
                responsive: true,
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    yAxes: [{
                        stacked: true
                    }]
                }
            }
        });


    </script>

}

@model CRM.ViewModels.Charts.SignalsModel
@Html.Partial("_SignalsFilterPanel")
<div class="content">

    @Html.ValidationSummary()

    <div style="height:30%; width:80%;margin: 0 auto;">
        <canvas id="myChart"  style="display: @(Model.boostValues.Count != 0 ? "block" : "none")"></canvas>
    </div>
    <div style=" padding-left: 350px; padding-right: 350px;">
        <a href="~/Charts/ExportToCSV/?start=@Model.StartDate&end=@Model.EndDate">Скачать</a>
        <table class=" table table-bordered table-font">
            <tr>
                <th>Дата</th>
                <th>boost proba</th>
                <th>logreg proba</th>
            </tr>
            @foreach (var item in Model.signals)
            {
                <tr>
                    <td>@item.Date</td>
                    <td>@item.boostProba</td>
                    <td>@item.logregProba</td>
                </tr>
            }

        </table>
    </div>

</div>
